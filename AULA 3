using Microsoft.AspNetCore.Components.Forms;
using Microsoft.AspNetCore.Http;
using Microsoft.AspNetCore.Mvc;
using Personagens.Models;

namespace Personagens.Controllers
{
    [Route("api/[controller]")]
    [ApiController]
    public class Personagens : ControllerBase
    {
        private static List<Personagem> personagens =
            new List<Personagem>
        {
                new Personagem
                {
                    Id = 1,
                    Nome = "Peter",
                    Sobrenome = "Parker",
                    Fantasia = "Homem-aranha",
                    Local = "NY City"
                },
                new Personagem
                {
                    Id = 2,
                    Nome = "Wade",
                    Sobrenome = "Wilson",
                    Fantasia = "Deadpool",
                    Local = "NY City"
                },
        };

        [HttpGet]
        public ActionResult<List<Personagem>>
            LerTodosPersonagens()
        {
            return Ok(personagens);
        }

        [HttpGet("{id}")]
        public ActionResult<Personagem>
        LerUnicoPersonagem(int id)
        {
            var unico = personagens.Find(x => x.Id == id);

            if (unico is null)
                return NotFound("Este personagem n達o foi encontrado");

            return Ok(unico);
        }

        [HttpPost]
        public ActionResult<List<Personagem>> 
            AddPersonagem(Personagem novo)
        {
            if(novo.Id == 0 && personagens.Count > 0)
                novo.Id = personagens[personagens.Count - 1].Id + 1;

            personagens.Add(novo);
            return Ok(personagens);
            

        }
        [HttpPut("{id}")]
        public ActionResult<List<Personagem>>
            ChangePersonagem(int id, Personagem editar)
        {
            var pesquisa = personagens.Find(x => x. Id == id);
            if (pesquisa is null)
                return NotFound("Personagem n達o existe");

            pesquisa.Nome = editar.Nome == "" ||
                            editar.Nome == "String" ?
                            pesquisa.Nome :
                            editar.Nome;

            return Ok(pesquisa);
        }

        [HttpDelete]
        public ActionResult<Personagem>
        RemoverPersonagem(int id)
        {
            var remocao = personagens.Find(x => x.Id == id);
            if (remocao is null)
                return NotFound("Personagem n達o existe");
            

            personagens.Remove(remocao);
            return Ok(personagens);
        }
        [HttpGet("local/{local}")]
        public ActionResult<List<Personagem>>
        LerLocal(string local)
        {
            var unico2 = personagens.FindAll(x => x.Local == local);

            if (unico2 is null)
                return NotFound($"Nenhum personagem foi encontrado em {local}");
            return Ok(unico2);
        }

        [HttpGet("fantasia/{id}")]
        public ActionResult BuscaFantasia (int id)
        {
            var pesquisa = personagens.Find(x => x.Id == id);

            if (pesquisa is null)
                return NotFound("Essa fantasia n達o existe");
            return Ok(pesquisa.Nome + " " + pesquisa.Fantasia);
        }

    }
}
